@page "/einstein"
@rendermode InteractiveServer
@inject SK.GraphRag.Application.Services.Interfaces.IEinsteinQueryService EinsteinService

<PageTitle>Einstein Chat</PageTitle>

<h1>Ask About Einstein</h1>

<p>This component queries a Graph database for information.</p>

<div class="chat-panel">
    <div class="qa-list">
        @if (qaHistory.Count == 0)
        {
            <p class="placeholder">Ask a question about Albert Einstein (e.g. "When was Einstein born?")</p>
        }
        else
        {
            @foreach (var item in qaHistory)
            {
                <div class="q"><strong>You:</strong> @item.Question</div>
                <div class="a"><strong>Einstein:</strong> @item.Answer</div>
            }
        }
    </div>
    <div class="input-row">
        <input placeholder="Type your question..." @bind="currentQuestion" @bind:event="oninput" @onkeydown="HandleKeyDown" />
        <button @onclick="AskAsync" disabled="@isLoading || string.IsNullOrWhiteSpace(currentQuestion)">Ask</button>
    </div>
</div>

@code {
    private string currentQuestion = string.Empty;
    private bool isLoading;

    private readonly List<(string Question, string Answer)> qaHistory = new();

    private async Task AskAsync()
    {
        if (string.IsNullOrWhiteSpace(currentQuestion)) return;
        var question = currentQuestion;
        isLoading = true;
        try
        {
            var answer = await EinsteinService.AskAsync(question);
            qaHistory.Add((question, answer));
            currentQuestion = string.Empty;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await AskAsync();
        }
    }
}
