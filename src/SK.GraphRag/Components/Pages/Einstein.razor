@page "/einstein"
@rendermode InteractiveServer
@inject SK.GraphRag.Application.Services.Interfaces.IEinsteinQueryService EinsteinService

<PageTitle>Einstein Chat</PageTitle>

<h3>Ask Einstein</h3>
<div class="einstein-container">
    <div class="einstein-icon" aria-hidden="true">
        <!-- Simplified Einstein SVG icon -->
        <svg width="96" height="96" viewBox="0 0 128 128" role="img" aria-label="Albert Einstein stylized icon">
            <circle cx="64" cy="64" r="60" fill="#f5f5f5" stroke="#555" stroke-width="4" />
            <path d="M25 50c8-22 22-32 39-32s31 10 39 32" fill="none" stroke="#888" stroke-width="6" stroke-linecap="round" />
            <path d="M32 54c6-10 18-16 32-16s26 6 32 16" fill="none" stroke="#aaa" stroke-width="4" />
            <circle cx="50" cy="70" r="8" fill="#fff" stroke="#333" stroke-width="3" />
            <circle cx="78" cy="70" r="8" fill="#fff" stroke="#333" stroke-width="3" />
            <circle cx="50" cy="70" r="3" fill="#333" />
            <circle cx="78" cy="70" r="3" fill="#333" />
            <path d="M56 88c4 4 12 4 16 0" stroke="#333" stroke-width="4" fill="none" stroke-linecap="round" />
            <path d="M54 60c2-3 6-5 10-5s8 2 10 5" stroke="#333" stroke-width="3" fill="none" />
            <path d="M40 100c8 6 40 6 48 0" stroke="#bbb" stroke-width="6" stroke-linecap="round" fill="none" />
        </svg>
    </div>
    <div class="chat-panel">
        <div class="qa-list">
            @if (qaHistory.Count == 0)
            {
                <p class="placeholder">Ask a question about Albert Einstein (e.g. "When was Einstein born?")</p>
            }
            else
            {
                @foreach (var item in qaHistory)
                {
                    <div class="q"><strong>You:</strong> @item.Question</div>
                    <div class="a"><strong>Einstein:</strong> @item.Answer</div>
                }
            }
        </div>
        <div class="input-row">
            <input placeholder="Type your question..." @bind="currentQuestion" @bind:event="oninput" @onkeydown="HandleKeyDown" />
            <button @onclick="AskAsync" disabled="@isLoading || string.IsNullOrWhiteSpace(currentQuestion)">Ask</button>
        </div>
    </div>
</div>

@code {
    private string currentQuestion = string.Empty;
    private bool isLoading;

    private readonly List<(string Question, string Answer)> qaHistory = new();

    private async Task AskAsync()
    {
        if (string.IsNullOrWhiteSpace(currentQuestion)) return;
        var question = currentQuestion;
        isLoading = true;
        try
        {
            var answer = await EinsteinService.AskAsync(question);
            qaHistory.Add((question, answer));
            currentQuestion = string.Empty;
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await AskAsync();
        }
    }
}
